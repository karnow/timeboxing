{"version":3,"sources":["components/Timeboxcreator.js","components/Error.js","components/SearchTimebox.js","components/TimeboxesList.js","components/ReadOnlyTimebox.js","components/Timebox.js","components/TimeboxEditor.js","components/EditableTimebox.js","components/TimeboxesManager.js","components/Clock.js","components/Progressbar.js","components/CurrentTimebox.js","lib/time.js","components/UserGreeting.js","components/Header.js","components/InspirationalQuote.js","components/AuthentiactedApp.js"],"names":["TimeboxCreator","state","title","totalTimeInMinutes","handleTitleChange","event","setState","target","value","handleTotalTimeInMinutesChange","handleSubmit","preventDefault","props","onCreate","onSubmit","this","className","onChange","type","step","React","Component","ErrorBoundaries","hasError","error","errorInfo","console","log","message","children","SearchTimebox","refresch","handleSearch","searchQuery","placeholder","onClick","RemainingTimeboxesList","connect","timeboxes","getRemainingTimeboxes","renderTimebox","useSelector","getSearchQuery","stan","map","ReadOnlyTimebox","timebox","Error","Timebox","onDelete","isEditable","onEdit","onMakeCurrent","disabled","e","TimeboxEditor","handleSubmitForm","onUpdate","id","handleCancel","onCancel","EditableTimebox","ownProps","isEdited","isTimeboxEdited","getisEditable","dispatch","startEditingTimebox","stopEditingTimebox","makeTimeboxCurrent","key","ErrorMessage","TimeboxesManager","useDispatch","accessToken","useContext","AuthenticationContext","timeboxesLoading","areTimeboxesLoading","timeboxesLoadingError","getTimeboxesLoadingError","getedFinishedTimboxes","getFinishedTimboxes","hasErrorSelv","useEffect","axiosAllTimeboxes","resetSearchAndCopiesTimeboxes","searchTimebox","searchTimeboxResult","createdTimebox","createTimeboxRemontly","index","indexToUpdate","updateTimebox","onUpdateRemontly","removeTimeboxRemontly","length","RealTimeClock","hours","minutes","secounds","getDate","intervalId","window","setInterval","count","hour","Date","getHours","minute","getMinutes","secound","getSeconds","stopTimer","clearInterval","Clock","seconds","defaultProps","ProgressBar","percent","big","color","progresClasName","classNames","style","width","CurrentTimebox","isRunning","isPaused","isFinished","pausesCount","elpsedTimeInSecounds","handleStart","bind","handleStop","togglePause","prevProps","prevState","onFinish","startTimer","totalTimeInSecounds","Math","min","durationInSecounds","floor","minutesLeft","secoundsLeft","progressInPercent","currentTimebox","getCurrentTimebox","finishCurrentTimebox","UserGreeting","Consumer","jwt","decode","email","getUserEmail","Header","Children","ModalText","textAlign","Portal","container","document","createElement","body","prepend","removeChild","ReactDOM","createPortal","Quote","require","InspirationQuote","useState","getQuote","quote","InspirationqRender","text","author","AuthentiactedApp","LogoutContext","Logout","href"],"mappings":"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","file":"static/js/4.4c24e577.chunk.js","sourcesContent":["import React from 'react'; \nclass TimeboxCreator extends React.Component {\n\n    state ={\n        title: \"\",\n        totalTimeInMinutes: \"\"\n    }\n\nhandleTitleChange = (event) => {\n    this.setState({title: event.target.value});\n}\n\nhandleTotalTimeInMinutesChange = (event) => {\n    \n    this.setState({totalTimeInMinutes: event.target.value});\n}\n\nhandleSubmit =(event) => {\n                            event.preventDefault(); \n                            this.props.onCreate({ title:this.state.title , totalTimeInMinutes:this.state.totalTimeInMinutes});\n                        \n                           this.setState({title: \"\", totalTimeInMinutes: \"\"}); \n\n}\n\nrender () {\nreturn ( <form onSubmit={this.handleSubmit} className=\"TimeboxCreator\">\n        <label>Co robisz? <input value={this.state.title} onChange={this.handleTitleChange} type=\"text\" /></label><br />\n        <label>Ile minut? <input value={this.state.totalTimeInMinutes} onChange={this.handleTotalTimeInMinutesChange} type=\"number\" step=\"0.01\" /></label><br />\n        <button>Dodaj TimeBox</button>\n    </form>\n    )}\n\n}\nexport default TimeboxCreator;","import React from 'react';\nimport PropTypes from \"prop-types\";\n\n\n\nclass ErrorBoundaries extends React.Component {\n\n    state = {\n           hasError:false\n    }\n    \n    static getDerivedStateFromError(error) {\n        // Update state so the next render will show the fallback UI.\n        return { hasError: true };\n      }\n    \n      componentDidCatch(error, errorInfo) {\n        // You can also log the error to an error reporting service\n        console.log(\"nastąpił następujący błąd:\", error, errorInfo);\n      }\n    \n      render () {\n          const {message, children} =this.props;\n    \n        return this.state.hasError ? message : children;\n      }\n    }\n      \n    ErrorBoundaries.propTypes= {\n      message:PropTypes.string.isRequired,\n      children:PropTypes.any.isRequired\n\n    }\n    \n\n\n    export default ErrorBoundaries;","import React from 'react';\n\n\nfunction SearchTimebox ({refresch, handleSearch, handleSubmit,searchQuery}) {\n\n    return (\n   \n    <div className=\"Timebox\">\n                <form onSubmit={handleSubmit} >\n                <label>Wyszukiwanie timboxów <input value={searchQuery} onChange={handleSearch} placeholder=\"Search\" type=\"text\" /></label>\n                <button>Wyszukaj timeboxy</button>\n                \n                <button onClick={refresch}>Odswież</button>\n                </form>\n                </div>\n                 )\n    }\n\n\n\nexport default SearchTimebox;","import {useSelector} from 'react-redux';\nimport {connect} from 'react-redux';\nimport { getRemainingTimeboxes, getSearchQuery } from '../reducers';\n\n\nexport function TimeboxesList ({renderTimebox ,timeboxes}) {\n    const searchQuery=useSelector(state=>getSearchQuery(state));\n    console.log(searchQuery)\n    const stan=useSelector(state=>(state));\n    console.log(stan)\n    return timeboxes.map(renderTimebox)\n    \n\n}\n\n    \nexport const RemainingTimeboxesList = connect(\n        (state) => ({timeboxes: getRemainingTimeboxes(state)}))(TimeboxesList);\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction ReadOnlyTimebox({\n  timebox,\n}) {\n  const {\n    title,\n    totalTimeInMinutes,\n  } = timebox;\n\n  ReadOnlyTimebox.propTypes =\n    {\n      timebox:\n        PropTypes.object,\n    };\n\n  if (\n    totalTimeInMinutes <= 0\n  ) {\n    throw new Error(\n      \"całkowity czas musi być większy niż zero\"\n    );\n  }\n  return (\n    <div className=\"Timebox\">\n      <h3>\n        {title} -{\" \"}\n        {totalTimeInMinutes}{\" \"}\n        min.{\" \"}\n      </h3>\n    </div>\n  );\n}\n\nexport default ReadOnlyTimebox;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Timebox({\n  timebox,\n  onDelete,\n  isEditable,\n  onEdit,\n  onMakeCurrent,\n}) {\n  const {\n    title,\n    totalTimeInMinutes,\n  } = timebox;\n\n  Timebox.propTypes = {\n    timebox: PropTypes.object,\n    isEditable:\n      PropTypes.bool,\n    onDelete:\n      PropTypes.func\n        .isRequired,\n  };\n\n  function zorpoznanie(e) {\n    // console.log('to jest zdarzenie: ',e.type);\n\n    onDelete();\n  }\n\n  //const {title, totalTimeInMinutes}=props;\n  if (\n    totalTimeInMinutes <= 0\n  ) {\n    // throw new Error(\"całkowity czas musi być większy niż zero\");\n  }\n  return (\n    <div className=\"Timebox\">\n      <h3>\n        {title} -{\" \"}\n        {totalTimeInMinutes}{\" \"}\n        min.{\" \"}\n      </h3>\n      <button\n        disabled={isEditable}\n        onClick={zorpoznanie}\n      >\n        Usuń\n      </button>\n      <button\n        disabled={isEditable}\n        onClick={onEdit}\n      >\n        Zmień\n      </button>\n      <button\n        disabled={isEditable}\n        onClick={\n          onMakeCurrent\n        }\n      >\n        Zacznij teraz\n      </button>\n    </div>\n  );\n}\n\nexport default Timebox;\n","import React from 'react';\n\nclass TimeboxEditor extends React.Component {\n\n    state ={\n\n        title:this.props.title,\n        totalTimeInMinutes:this.props.totalTimeInMinutes,\n    }\n    handleTitleChange = (event) => {\n    this.setState({title: event.target.value});\n    console.log(this.state.title);\n}\n    handleTotalTimeInMinutesChange = (event) => {\n    this.setState({totalTimeInMinutes: event.target.value});\n}\n\nhandleSubmitForm = (event) => {\n    console.log(\"submit działa\");\nevent.preventDefault();\nconst {title, totalTimeInMinutes} =this.state;\nthis.props.onUpdate(this.props.id, { id:this.props.id, title, totalTimeInMinutes});\n}\n\n\nhandleCancel = () => {\n   this.props.onCancel();\n}\n\n\n\nrender () {\n    const {title, totalTimeInMinutes} = this.state;\n    console.log(this.props.id);\n    console.log(this.state.title);\n    \n\n    return (\n       <div className=\"Timebox\">\n    <form onSubmit={this.handleSubmitForm}>\n         \n            <input type=\"text\" onChange={this.handleTitleChange} value={title}/>\n            <input type=\"number\" step=\"0.01\" onChange={this.handleTotalTimeInMinutesChange} value={totalTimeInMinutes} />\n            <button type=\"submit\">edytuj</button>\n            <button type=\"button\" onClick={this.handleCancel}>anuluj</button>\n            \n    </form>\n    </div>\n    )\n            \n\n\n}\n\n}\n\nexport default TimeboxEditor;","import React from 'react';\nimport {connect} from 'react-redux';\nimport {isTimeboxEdited, getisEditable } from '../reducers';\nimport Timebox from './Timebox';\nimport TimeboxEditor from './TimeboxEditor';\nimport {startEditingTimebox, stopEditingTimebox, makeTimeboxCurrent} from '../actions'\n\nconst mapStatetoProps = (state, ownProps) => ({\n    isEdited: isTimeboxEdited(state,ownProps.timebox),\n    isEditable: getisEditable(state)\n    \n})\n\n//ownProps są to propsy komponentu który przyłączamy\nconst mapDispatchtoProps = (dispatch, ownProps) => {\n    const onEdit = () =>dispatch(startEditingTimebox(ownProps.timebox));\n    const onCancel = ()=> dispatch(stopEditingTimebox());\n    const onMakeCurrent =()=>dispatch(makeTimeboxCurrent(ownProps.timebox));\n    return {onEdit, onCancel, onMakeCurrent};\n}\n\nexport const EditableTimebox= connect(mapStatetoProps, mapDispatchtoProps)(function EditableTimebox({ timebox, isEdited, onEdit, onCancel, onUpdate, onDelete, isEditable, onMakeCurrent }) {\n    return(\n    <>\n        {isEdited ?\n            <TimeboxEditor\n                id={timebox.id}\n                title={timebox.title}\n                totalTimeInMinutes={timebox.totalTimeInMinutes}\n                onUpdate={onUpdate}\n                onCancel={onCancel} />\n\n            :\n            <Timebox\n                key={timebox.id}\n                timebox={timebox}\n                isEditable={isEditable}\n                onDelete={onDelete}\n                onEdit={onEdit}\n                onMakeCurrent={onMakeCurrent} />\n                }\n    </>\n    )\n})\n","import React, {useContext, useEffect} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport TimeboxCreator from './Timeboxcreator';\nimport ErrorBoundaries from './Error';\nimport SearchTimebox from './SearchTimebox';\n\nimport AuthenticationContext from '../contexts/AuthenticationContext';\nimport {RemainingTimeboxesList} from './TimeboxesList';\nimport ReadOnlyTimebox from './ReadOnlyTimebox';\nimport {areTimeboxesLoading, getTimeboxesLoadingError, getSearchQuery,hasErrorSelv, getFinishedTimboxes} from '../reducers';\nimport {axiosAllTimeboxes ,createTimeboxRemontly , removeTimeboxRemontly, onUpdateRemontly, searchTimebox,searchTimeboxResult, resetSearchAndCopiesTimeboxes} from '../actions';\nimport { EditableTimebox } from './EditableTimebox';\n\n\nfunction TimeboxesManager () {\n\nconst dispatch =useDispatch();\n\nconst {accessToken} = useContext(AuthenticationContext);\nconst searchQuery=useSelector(state=>getSearchQuery(state));\nconst timeboxesLoading=useSelector(state=> areTimeboxesLoading(state));\nconst timeboxesLoadingError=useSelector(state=> getTimeboxesLoadingError(state));\nconst getedFinishedTimboxes=useSelector(state=>getFinishedTimboxes(state));\nconst hasError=useSelector(state=>hasErrorSelv(state));\n//const state = useSelector(state=>state)\n\nuseEffect(()=>{\n\ndispatch(axiosAllTimeboxes(accessToken))\n\n},[]); \n\nconst handleCreate= (createdTimebox)=> dispatch(createTimeboxRemontly(createdTimebox,accessToken)) \n\n    \n   //render props\nconst renderTimebox =(timebox,index)=>{\nconst onUpdate = (indexToUpdate, updateTimebox)=>dispatch(onUpdateRemontly(indexToUpdate, updateTimebox,accessToken));     \nconst onDelete= ()=> dispatch(removeTimeboxRemontly(timebox, accessToken));\n        \n       return <EditableTimebox           \n            timebox={timebox}\n            onUpdate={onUpdate}\n            onDelete={onDelete}\n            />\n\n       }\n            \n    //  function renderReadOnlyTimebox (timebox) {\n       \n    //    return (\n    //        <>\n    //       <strong>\"Aktualny Edytowany Timebox\"</strong> \n    //    <ReadOnlyTimebox\n    //        key={timebox.id}\n    //        timebox={timebox}\n           \n    //         />\n    //        </>\n    //    )\n    //    }\n    \n       \n       return (\n           <>\n           \n            <SearchTimebox \n            refresch={()=>dispatch(resetSearchAndCopiesTimeboxes())} \n            handleSearch={(event)=>dispatch(searchTimebox(event))}\n            handleSubmit={(event)=>dispatch(searchTimeboxResult(event, accessToken))} \n            searchQuery={searchQuery}\n            /> \n            \n            {/* poniższy przykład renderowania poprzez selektory jakiś danych */}\n            {/* {isAnyTimeboxEdited(state) ? renderReadOnlyTimebox(getCurrentlyEditedTimebox(state)): <strong>W tej chwili nie edytujemy żadnego Timebox'a</strong>} */}\n           \n            <ErrorMessage hasError={hasError} message=\"POdałeś nie prawidłową wartość\">  \n           <TimeboxCreator onCreate={handleCreate}/>\n               </ErrorMessage>\n   \n           {timeboxesLoading ? \"Timeboxy is loading...\": null}\n           {timeboxesLoadingError ? \"Nie udało się załadować\":null}\n           {console.log(timeboxesLoadingError)}\n           \n           <ErrorBoundaries message=\"coś się wykrzaczyło :(\">\n   \n               <RemainingTimeboxesList \n                   renderTimebox={renderTimebox} //ładowanie wzorca\n                             \n                   />\n                    \n           </ErrorBoundaries>\n           {getedFinishedTimboxes.length===0 ? (\n           null\n\n           ): (\n           <>\n            {console.log(getedFinishedTimboxes)}\n            <h3>Ukończone zadania</h3>\n            {getedFinishedTimboxes.map((timebox) => <ReadOnlyTimebox key={timebox.id} timebox={timebox}/>)}\n            \n            </>)\n           \n           }\n\n           \n           \n           </>\n       \n       )\n   }\n   \n   \n   function ErrorMessage ({hasError, message, children}) {\n       \n       return hasError ? message : children;\n     }\n       \n    \n   \n   \n   export default TimeboxesManager;\n                   \n                  \n                   \n                   \n       \n   \n   \n   \n   \n                   \n                   \n                   \n               \n             \n   \n   \n   \n    \n\n\n\n\n          \n\n\n\n       \n\n\n\n\n    ","import React from 'react';\n\nfunction Clock ({className, minutes, seconds}) {\n\n    Clock.defaultProps ={\n        className:\"\",\n        minutes:33,\n        secounds:11\n\n    }\n  \n    return (\n    <>\n    <h2 className={\"clock \" + className}>Pozostało <span className=\"clock__minutes clock--italic\">{minutes}</span><span className=\"clock__dwukropek\">:</span><span className=\"clock__secunds clock--italic\">{seconds}</span></h2>\n    <RealTimeClock/>\n    </>\n    )\n}\n// komponent zegar w czasie rzeczywistym\nclass RealTimeClock extends React.Component {\nstate={\n    hours: 0,\n    minutes: 0,\n    secounds: 0,\n\n}\ncomponentDidMount(){\n    this.getDate();\n}\n\ncomponentWillUnmount(){\n    this.stopTimer();\n}\n\n\ngetDate=() =>{\n    \nthis.intervalId = window.setInterval(() => {\n    console.count(\"liczę zegar\");\n    let hour = new Date().getHours();\n    let minute = new Date().getMinutes();\n    let secound = new Date().getSeconds();\n        \n    this.setState({hours:hour, minutes:minute, secounds:secound})\n}, 1000);\n\n}\nstopTimer=()=>{\n    window.clearInterval(this.intervalId);\n}\n\nrender(){ \n    \n    return (\n    <h2 className={\"clock \"}>Aktualny Czas <span className=\"clock__minutes\">{this.state.hours}</span>:<span className=\"clock__minutes\">{this.state.minutes}</span>.<span className=\"clock__secunds\">{this.state.secounds}</span></h2>\n        )\n    }\n    }\n\nexport default Clock;","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\n\n\nfunction ProgressBar({ className = \"\", percent=33, big=false,  color=null}) {\n\n        let progresClasName = classNames(\n            \"progress\",\n            className,\n            {\n            \"progress--big\": big,\n            \"progress--color-red\":color === \"red\",\n            \"progress--color-blue\":color === \"blue\",\n            \"progress--color-green\":color === \"green\"\n            }\n        )\n\n        function validRange (props, propName, componentName){\n\n            if(props[propName] >100 || props[propName] <0) {\n                return new Error(`Invalid prop ${propName} issued to component ${componentName}. the valid range is from 0 to 100` )\n            }\n        }\n\n        function defaultColor  (props, propName, componentName){\n\n            if(props[propName] !==\"red\" || props[propName] !==\"green\" || props[propName] !==\"blue\") {\n                return new Error(`Invalid prop ${propName} issued to component ${componentName}. the color should be red, blue or green` )\n            }\n        }\n        \n        ProgressBar.propTypes= {\n            big: PropTypes.bool,\n            percent: validRange,\n            color: defaultColor\n            \n        }\n\n    \n\n        \n            return (\n                <div className={progresClasName}>\n                    <div className=\"progress__bar\" style={{width: `${percent}%`}}></div>\n                </div>\n            );\n        }\n        \n        export default ProgressBar;\n\n    \n        \n \n    ","import React from 'react';\nimport Clock from './Clock';\nimport ProgressBar from './Progressbar';\nimport {getMinutesAndSecoundsFromDurationInSecounds} from \"../lib/time\";\nimport { getCurrentTimebox } from '../reducers';\nimport {finishCurrentTimebox} from '../actions';\n\nimport { connect } from 'react-redux';\n\n\nclass CurrentTimebox extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state= {\n            isRunning:false,\n            isPaused:false,\n            isFinished: false,\n            pausesCount:0,\n            elpsedTimeInSecounds : 0,\n            \n        }\n\n        this.handleStart = this.handleStart.bind(this)\n        this.handleStop = this.handleStop.bind(this)\n        this.togglePause = this.togglePause.bind(this)\n        this.intervalId = null;\n\n}\n\ncomponentDidMount(){\n\n    console.count(\"componentDidMount\")\n}\n\ncomponentDidUpdate(prevProps, prevState){\n    if (!prevState.isFinished && this.state.isFinished) {\n        this.props.onFinish();\n    }\n    console.count(\"componentDid Update\")\n}\n\ncomponentWillUnmount(){\n    console.count(\"componentwillUnmount\");\n    this.stopTimer();\n}\n    \nhandleStart(event) {\n    this.setState({\n        isRunning:true\n        \n    })\n    this.startTimer();\n}\n\nhandleStop(event) {\n    this.setState({\n        isRunning:false,\n        isPaused: false,\n        pausesCount:0,\n        elpsedTimeInSecounds : 0\n    })\n    this.stopTimer();\n}\n\n    startTimer(){\n        if (this.intervalId === null) {\n        this.intervalId = window.setInterval(() => {\n            console.log(\"timer works\");\n            this.setState(\n                (prevState) => {\n                    const  {totalTimeInMinutes } = this.props;\n                    const totalTimeInSecounds = totalTimeInMinutes * 60;\n                    const elpsedTimeInSecounds = Math.min(prevState.elpsedTimeInSecounds + 0.1, totalTimeInSecounds)\n                    const isFinished = prevState.isFinished || elpsedTimeInSecounds >= totalTimeInSecounds;\n                    if (isFinished) {\n                        this.stopTimer();\n                    }\n                    const isRunning = prevState.isRunning && !isFinished;\n                    const isPaused = prevState.isPaused && !isFinished;\n                    return {elpsedTimeInSecounds, isFinished, isRunning, isPaused}\n                }\n            )\n        }, 100);\n    }\n    }\n       \n    stopTimer(){\n        window.clearInterval(this.intervalId);\n        this.intervalId = null;\n    }\n\n    togglePause() {\n               \n        this.setState(\n            function (prevState){\n                \n                const isPaused = !prevState.isPaused;\n                if(isPaused) {\n                    this.stopTimer();\n                }else {\n                    this.startTimer();\n                }\n                return {\n                   isPaused,\n                   pausesCount: isPaused ? prevState.pausesCount +1 : prevState.pausesCount\n\n\n                }\n\n            }\n        )\n    }     \n    \n    render() { \n        \n        const {isFinished, isPaused, isRunning, pausesCount, elpsedTimeInSecounds} = this.state;\n        const {title, totalTimeInMinutes} = this.props;\n        const totalTimeInSecounds=totalTimeInMinutes*60;\n        const timeLeftInSecounds= totalTimeInSecounds - elpsedTimeInSecounds;\n        \n        const [minutesLeft, secoundsLeft] = getMinutesAndSecoundsFromDurationInSecounds(timeLeftInSecounds);\n        \n        const progressInPercent = (elpsedTimeInSecounds / totalTimeInSecounds) * 100;\n        return (\n                <div className=\"CurrentTimebox\">\n                    <h1>{title}</h1>\n                    <Clock minutes={minutesLeft} seconds={secoundsLeft} className={isPaused ? \"inactive\" : \"\"}/>\n                    <ProgressBar percent={progressInPercent} className={isPaused ? \"inactive\" : \"\"} big color=\"white\"/>\n                    \n                    <button onClick={this.handleStart} disabled={isRunning || isFinished}>Start</button>\n                    <button onClick={this.handleStop} disabled={!isRunning}>Stop</button>\n                    <button onClick={this.togglePause} disabled={!isRunning}>{isPaused ? \"wznów\" : \"pauzuj\"}</button>\n                    Liczba przerw: {pausesCount}\n                </div>)\n                    \n\n            }\n}   \n\nfunction CurrentTimeboxOrNothing({ currentTimebox, onFinish }) {\n    if (currentTimebox) {\n        const {title, totalTimeInMinutes}= currentTimebox;\n    return <CurrentTimebox title={title} totalTimeInMinutes={totalTimeInMinutes} onFinish={onFinish}/>\n\n    } else {\n        return null;\n    }\n\n}\n\n\nfunction mapStatetoProps(state) {\n    const currentTimebox = getCurrentTimebox(state);\n    \n    console.log(currentTimebox);\n\n    return {currentTimebox}\n    \n}\n\nfunction mapDispatchToProps(dispatch, ownProps){\n    console.log(\"usuwam ja mapdispachyo props\");\n    const onFinish = () =>{ dispatch(finishCurrentTimebox(ownProps.currentTimebox)); }\n    return {onFinish}\n    \n\n    }\nexport default connect(mapStatetoProps, mapDispatchToProps)(CurrentTimeboxOrNothing);","function getMinutesAndSecoundsFromDurationInSecounds(durationInSecounds) {\n    const minutes = Math.floor(durationInSecounds/60);\n    const secound = Math.floor(durationInSecounds%60);\n    return [minutes, secound];\n     }\n\n\n     function fib(x) {\n        return x <= 1 ? x : fib(x-2) + fib(x-1)\n        }\n\n\n     \n\n     export {\n         getMinutesAndSecoundsFromDurationInSecounds, fib\n     };","import React from \"react\";\nimport jwt from 'jsonwebtoken';\nimport AuthenticationContext from \"../contexts/AuthenticationContext\";\n\n\n\nfunction UserGreeting(props) {\n    \n    return (\n    <AuthenticationContext.Consumer>\n        {\n    ({accessToken})=> <> Witaj {getUserEmail(accessToken)} </>\n        }\n    </AuthenticationContext.Consumer> \n    )\n}\n\n\n\n\nexport default UserGreeting;\n\nfunction getUserEmail(accessToken) {\n    const decodeToken = jwt.decode(accessToken);\n    return decodeToken.email\n}","import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport UserGreeting from './UserGreeting';\n\nfunction Header ({children}) {\n    if (React.Children.count(children)<1) {\n    throw new Error (\"Header har to have at least one child\")\n  }\n\n\n    return (\n        \n        <header className=\"header\">\n            <ModalText>\n        <h5 style={{textAlign:\"center\"}}>The cake is a like - this is Portal</h5>\n        </ModalText>\n        <UserGreeting/>\n        {children}\n                \n        </header>\n    ) ;\n}\nexport default Header;\n\n\n/////Portal \n\nfunction ModalText ({children}) {\n\nreturn(\n<Portal>\n    {children}\n    </Portal>\n)\n}\n\nclass Portal extends React.Component {\n    constructor(props) {\n      super(props);\n  \n      this.container = document.createElement(\"div\");\n    }\n    componentDidMount() {\n      document.body.prepend(this.container);\n    }\n    componentWillUnmount() {\n      document.body.removeChild(this.container);\n    }\n    render() {\n      return ReactDOM.createPortal(this.props.children, this.container);\n    }\n  }\n","import React, { useState} from \"react\";\n\nconst Quote = require('inspirational-quotes');\n\n\nfunction InspirationQuote (){\n  const [quote, setQuote] = useState(Quote.getQuote());\n  \n  return (<>\n   \n  <InspirationqRender \n       quote={quote}\n        text={quote.text} \n        author={quote.author}/> \n       \n    \n       </>);\n     };\n\n   \n\nexport default InspirationQuote;\n\nfunction InspirationqRender ({quote, text, author}) {\n\nreturn (\n  <>\n  {quote ? \n      (\n  <figure>\n          <blockquote>{text}</blockquote>\n          <figcaption>\n            <cite>{author}</cite>\n          </figcaption>\n        </figure>\n         ) : (\n          \"...\"\n          )}\n  </>\n)\n}","import React from \"react\";\nimport TimeboxesManager from \"./TimeboxesManager\";\nimport CurrentTimebox from \"./CurrentTimebox\";\nimport Header from \"./Header\";\nimport InspirationQuote from \"./InspirationalQuote\";\nimport LogoutContext from \"../contexts/LogoutContext\";\n\nfunction AuthentiactedApp(\n  props\n) {\n  return (\n    <>\n      <Header>\n        <LogoutContext.Consumer>\n          {({ Logout }) => (\n            <>\n              {\" \"}\n              <a\n                onClick={\n                  Logout\n                }\n                className=\"header__logout-link\"\n                href=\"#\"\n              >\n                {\" \"}\n                Wyloguj się\n              </a>{\" \"}\n            </>\n          )}\n        </LogoutContext.Consumer>\n      </Header>\n      <TimeboxesManager />\n      <CurrentTimebox />\n      <InspirationQuote />\n    </>\n  );\n}\n\nexport default AuthentiactedApp;\n"],"sourceRoot":""}